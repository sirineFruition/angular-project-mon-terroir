/**
 * angular2-google-maps - Angular2 components for Google Maps
 * @version v0.8.1
 * @link https://github.com/SebastianM/angular2-google-maps#readme
 * @license MIT
 */
{"version":3,"sources":["services/marker-manager.ts"],"names":[],"mappings":"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","file":"services/marker-manager.js","sourcesContent":["import {Injectable, NgZone} from 'angular2/core';\nimport {Observer} from 'rxjs/Observer';\nimport {Observable} from 'rxjs/Observable';\nimport {SebmGoogleMapMarker} from '../directives/google-map-marker';\nimport {GoogleMapsAPIWrapper} from './google-maps-api-wrapper';\nimport {Marker} from './google-maps-types';\n\n@Injectable()\nexport class MarkerManager {\n  private _markers: Map<SebmGoogleMapMarker, Promise<Marker>> =\n      new Map<SebmGoogleMapMarker, Promise<Marker>>();\n\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\n\n  deleteMarker(marker: SebmGoogleMapMarker): Promise<void> {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return Promise.resolve();\n    }\n    return m.then((m: Marker) => {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    });\n  }\n\n  updateMarkerPosition(marker: SebmGoogleMapMarker): Promise<void> {\n    return this._markers.get(marker).then(\n        (m: Marker) => m.setPosition({lat: marker.latitude, lng: marker.longitude}));\n  }\n\n  updateTitle(marker: SebmGoogleMapMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setTitle(marker.title));\n  }\n\n  updateLabel(marker: SebmGoogleMapMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => { m.setLabel(marker.label); });\n  }\n\n  updateDraggable(marker: SebmGoogleMapMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setDraggable(marker.draggable));\n  }\n\n  addMarker(marker: SebmGoogleMapMarker) {\n    const markerPromise = this._mapsWrapper.createMarker({\n      position: {lat: marker.latitude, lng: marker.longitude},\n      label: marker.label,\n      draggable: marker.draggable\n    });\n    this._markers.set(marker, markerPromise);\n  }\n\n  createEventObservable<T>(eventName: string, marker: SebmGoogleMapMarker): Observable<T> {\n    return Observable.create((observer: Observer<T>) => {\n      this._markers.get(marker).then((m: Marker) => {\n        m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\n"],"sourceRoot":"/source/"}