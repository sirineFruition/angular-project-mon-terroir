System.registerDynamic("angular2-google-maps/services/maps-api-loader/noop-maps-api-loader",[],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=function(){function a(){}return a.prototype.load=function(){if(!window.google||!window.google.maps)throw new Error("Google Maps API not loaded on page. Make sure window.google.maps is available!");return Promise.resolve()},a}();return b.NoOpMapsAPILoader=f,d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/services",["angular2-google-maps/services/maps-api-loader/maps-api-loader","angular2-google-maps/services/maps-api-loader/noop-maps-api-loader","angular2-google-maps/services/maps-api-loader/lazy-maps-api-loader"],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=a("angular2-google-maps/services/maps-api-loader/maps-api-loader");b.MapsAPILoader=f.MapsAPILoader;var g=a("angular2-google-maps/services/maps-api-loader/noop-maps-api-loader");b.NoOpMapsAPILoader=g.NoOpMapsAPILoader;var h=a("angular2-google-maps/services/maps-api-loader/lazy-maps-api-loader");return b.LazyMapsAPILoader=h.LazyMapsAPILoader,b.LazyMapsAPILoaderConfig=h.LazyMapsAPILoaderConfig,b.GoogleMapsScriptProtocol=h.GoogleMapsScriptProtocol,d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/directives-const",["angular2-google-maps/directives/google-map","angular2-google-maps/directives/google-map-marker"],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=a("angular2-google-maps/directives/google-map"),g=a("angular2-google-maps/directives/google-map-marker");return b.ANGULAR2_GOOGLE_MAPS_DIRECTIVES=[f.SebmGoogleMap,g.SebmGoogleMapMarker],d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/directives/google-map-marker",["angular2/core","angular2-google-maps/services/marker-manager"],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},g=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},h=a("angular2/core"),i=a("angular2-google-maps/services/marker-manager"),j=0,k=function(){function a(a){this._markerManager=a,this.draggable=!1,this.markerClick=new h.EventEmitter,this.dragEnd=new h.EventEmitter,this._markerAddedToManger=!1,this._id=(j++).toString()}return a.prototype.ngOnChanges=function(a){if("number"==typeof this.latitude&&"number"==typeof this.longitude){if(!this._markerAddedToManger)return this._markerManager.addMarker(this),this._markerAddedToManger=!0,void this._addEventListeners();(a.latitude||a.longitude)&&this._markerManager.updateMarkerPosition(this),a.title&&this._markerManager.updateTitle(this),a.label&&this._markerManager.updateLabel(this),a.draggable&&this._markerManager.updateDraggable(this)}},a.prototype._addEventListeners=function(){var a=this;this._markerManager.createEventObservable("click",this).subscribe(function(){a.markerClick.next(null)}),this._markerManager.createEventObservable("dragend",this).subscribe(function(b){a.dragEnd.next({coords:{lat:b.latLng.lat(),lng:b.latLng.lng()}})})},a.prototype.id=function(){return this._id},a.prototype.toString=function(){return"SebmGoogleMapMarker-"+this._id.toString()},a.prototype.ngOnDestroy=function(){this._markerManager.deleteMarker(this)},a=f([h.Directive({selector:"sebm-google-map-marker",inputs:["latitude","longitude","title","label","draggable: markerDraggable"],outputs:["markerClick","dragEnd"]}),g("design:paramtypes",[i.MarkerManager])],a)}();return b.SebmGoogleMapMarker=k,d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/services/marker-manager",["angular2/core","rxjs/Observable","angular2-google-maps/services/google-maps-api-wrapper"],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},g=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},h=a("angular2/core"),i=a("rxjs/Observable"),j=a("angular2-google-maps/services/google-maps-api-wrapper"),k=function(){function a(a,b){this._mapsWrapper=a,this._zone=b,this._markers=new Map}return a.prototype.deleteMarker=function(a){var b=this,c=this._markers.get(a);return null==c?Promise.resolve():c.then(function(c){return b._zone.run(function(){c.setMap(null),b._markers["delete"](a)})})},a.prototype.updateMarkerPosition=function(a){return this._markers.get(a).then(function(b){return b.setPosition({lat:a.latitude,lng:a.longitude})})},a.prototype.updateTitle=function(a){return this._markers.get(a).then(function(b){return b.setTitle(a.title)})},a.prototype.updateLabel=function(a){return this._markers.get(a).then(function(b){b.setLabel(a.label)})},a.prototype.updateDraggable=function(a){return this._markers.get(a).then(function(b){return b.setDraggable(a.draggable)})},a.prototype.addMarker=function(a){var b=this._mapsWrapper.createMarker({position:{lat:a.latitude,lng:a.longitude},label:a.label,draggable:a.draggable});this._markers.set(a,b)},a.prototype.createEventObservable=function(a,b){var c=this;return i.Observable.create(function(d){c._markers.get(b).then(function(b){b.addListener(a,function(a){return c._zone.run(function(){return d.next(a)})})})})},a=f([h.Injectable(),g("design:paramtypes",[j.GoogleMapsAPIWrapper,h.NgZone])],a)}();return b.MarkerManager=k,d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/services/google-maps-api-wrapper",["angular2/core","rxjs/Observable","angular2-google-maps/services/maps-api-loader/maps-api-loader"],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},g=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},h=a("angular2/core"),i=a("rxjs/Observable"),j=a("angular2-google-maps/services/maps-api-loader/maps-api-loader"),k=function(){function a(a,b){var c=this;this._loader=a,this._zone=b,this._map=new Promise(function(a){c._mapResolver=a})}return a.prototype.createMap=function(a,b){var c=this;return this._loader.load().then(function(){var d=new google.maps.Map(a,b);c._mapResolver(d)})},a.prototype.setMapOptions=function(a){this._map.then(function(b){b.setOptions(a)})},a.prototype.createMarker=function(a){return void 0===a&&(a={}),this._map.then(function(b){return a.map=b,new google.maps.Marker(a)})},a.prototype.subscribeToMapEvent=function(a){var b=this;return i.Observable.create(function(c){b._map.then(function(d){d.addListener(a,function(a){b._zone.run(function(){return c.next(a)})})})})},a.prototype.setCenter=function(a){return this._map.then(function(b){return b.setCenter(a)})},a.prototype.getZoom=function(){return this._map.then(function(a){return a.getZoom()})},a.prototype.setZoom=function(a){return this._map.then(function(b){return b.setZoom(a)})},a.prototype.getCenter=function(){return this._map.then(function(a){return a.getCenter()})},a=f([h.Injectable(),g("design:paramtypes",[j.MapsAPILoader,h.NgZone])],a)}();return b.GoogleMapsAPIWrapper=k,d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/directives/google-map",["angular2/core","angular2-google-maps/services/google-maps-api-wrapper","angular2-google-maps/services/marker-manager"],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},g=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},h=a("angular2/core"),i=a("angular2-google-maps/services/google-maps-api-wrapper"),j=a("angular2-google-maps/services/marker-manager"),k=function(){function a(a,b){this._elem=a,this._mapsWrapper=b,this._longitude=0,this._latitude=0,this._zoom=8,this.disableDoubleClickZoom=!1,this.disableDefaultUI=!1,this.mapClick=new h.EventEmitter,this.mapRightClick=new h.EventEmitter,this.mapDblClick=new h.EventEmitter}return a.prototype.ngOnInit=function(){var a=this._elem.nativeElement.querySelector(".sebm-google-map-container-inner");this._initMapInstance(a)},a.prototype._initMapInstance=function(a){this._mapsWrapper.createMap(a,{center:{lat:this._latitude,lng:this._longitude},zoom:this._zoom,disableDefaultUI:this.disableDefaultUI}),this._handleMapCenterChange(),this._handleMapZoomChange(),this._handleMapMouseEvents()},a._containsMapOptionsChange=function(b){return b.every(function(b){return 1!==a._mapOptionsAttributes.indexOf(b)})},a.prototype.ngOnChanges=function(b){a._containsMapOptionsChange(Object.keys(b))&&this._mapsWrapper.setMapOptions({disableDoubleClickZoom:this.disableDoubleClickZoom})},Object.defineProperty(a.prototype,"zoom",{set:function(a){this._zoom=this._convertToDecimal(a,8),"number"==typeof this._zoom&&this._mapsWrapper.setZoom(this._zoom)},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"longitude",{set:function(a){this._longitude=this._convertToDecimal(a),this._updateCenter()},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"latitude",{set:function(a){this._latitude=this._convertToDecimal(a),this._updateCenter()},enumerable:!0,configurable:!0}),a.prototype._convertToDecimal=function(a,b){return void 0===b&&(b=null),"string"==typeof a?parseFloat(a):"number"==typeof a?a:b},a.prototype._updateCenter=function(){"number"==typeof this._latitude&&"number"==typeof this._longitude&&this._mapsWrapper.setCenter({lat:this._latitude,lng:this._longitude})},a.prototype._handleMapCenterChange=function(){var a=this;this._mapsWrapper.subscribeToMapEvent("center_changed").subscribe(function(){a._mapsWrapper.getCenter().then(function(b){a._latitude=b.lat(),a._longitude=b.lng()})})},a.prototype._handleMapZoomChange=function(){var a=this;this._mapsWrapper.subscribeToMapEvent("zoom_changed").subscribe(function(){a._mapsWrapper.getZoom().then(function(b){return a._zoom=b})})},a.prototype._handleMapMouseEvents=function(){var a=this,b=[{name:"click",emitter:this.mapClick},{name:"rightclick",emitter:this.mapRightClick},{name:"dblclick",emitter:this.mapDblClick}];b.forEach(function(b){a._mapsWrapper.subscribeToMapEvent(b.name).subscribe(function(a){var c={coords:{lat:a.latLng.lat(),lng:a.latLng.lng()}};b.emitter.emit(c)})})},a._mapOptionsAttributes=["disableDoubleClickZoom"],a=f([h.Component({selector:"sebm-google-map",providers:[i.GoogleMapsAPIWrapper,j.MarkerManager],inputs:["longitude","latitude","zoom","disableDoubleClickZoom","disableDefaultUI"],outputs:["mapClick","mapRightClick","mapDblClick"],host:{"[class.sebm-google-map-container]":"true"},styles:["\n    .sebm-google-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n  "],template:'\n    <div class="sebm-google-map-container-inner"></div>\n    <ng-content></ng-content>\n  '}),g("design:paramtypes",[h.ElementRef,i.GoogleMapsAPIWrapper])],a)}();return b.SebmGoogleMap=k,d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/directives",["angular2-google-maps/directives/google-map","angular2-google-maps/directives/google-map-marker","angular2-google-maps/directives-const"],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=a("angular2-google-maps/directives/google-map");b.SebmGoogleMap=f.SebmGoogleMap;var g=a("angular2-google-maps/directives/google-map-marker");b.SebmGoogleMapMarker=g.SebmGoogleMapMarker;var h=a("angular2-google-maps/directives-const");return b.ANGULAR2_GOOGLE_MAPS_DIRECTIVES=h.ANGULAR2_GOOGLE_MAPS_DIRECTIVES,d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/services/maps-api-loader/lazy-maps-api-loader",["angular2/core","angular2-google-maps/services/maps-api-loader/maps-api-loader"],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)},g=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},h=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},i=this&&this.__param||function(a,b){return function(c,d){b(c,d,a)}},j=a("angular2/core"),k=a("angular2-google-maps/services/maps-api-loader/maps-api-loader");!function(a){a[a.HTTP=0]="HTTP",a[a.HTTPS=1]="HTTPS",a[a.AUTO=2]="AUTO"}(b.GoogleMapsScriptProtocol||(b.GoogleMapsScriptProtocol={}));var l=b.GoogleMapsScriptProtocol,m=function(){function a(){this.apiKey=null,this.apiVersion="3",this.hostAndPath="maps.googleapis.com/maps/api/js",this.protocol=l.HTTPS,this.libraries=[],this.region=null,this.language=null}return a}();b.LazyMapsAPILoaderConfig=m;var n=new m,o=function(a){function b(b){a.call(this),this._config=b,(null===this._config||void 0===this._config)&&(this._config=n)}return f(b,a),b.prototype.load=function(){if(this._scriptLoadingPromise)return this._scriptLoadingPromise;var a=document.createElement("script");a.type="text/javascript",a.async=!0,a.defer=!0;var b="angular2googlemaps"+(new Date).getMilliseconds();return a.src=this._getScriptSrc(b),this._scriptLoadingPromise=new Promise(function(c,d){window[b]=function(){c()},a.onerror=function(a){d(a)}}),document.body.appendChild(a),this._scriptLoadingPromise},b.prototype._getScriptSrc=function(a){var b,c=this._config&&this._config.protocol||n.protocol;switch(c){case l.AUTO:b="";break;case l.HTTP:b="http:";break;case l.HTTPS:b="https:"}var d=this._config.hostAndPath||n.hostAndPath,e=this._config.apiKey||n.apiKey,f=this._config.libraries||n.libraries,g=this._config.region||n.region,h=this._config.language||n.language,i={v:this._config.apiVersion||n.apiKey,callback:a};e&&(i.key=e),null!=f&&f.length>0&&(i.libraries=f.join(",")),null!=g&&g.length>0&&(i.region=g),null!=h&&h.length>0&&(i.language=h);var j=Object.keys(i).map(function(a,b){var c=0===b?"?":"&";return c+=a+"="+i[a]}).join("");return b+"//"+d+j},b=g([j.Injectable(),i(0,j.Optional()),h("design:paramtypes",[m])],b)}(k.MapsAPILoader);return b.LazyMapsAPILoader=o,d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/services/maps-api-loader/maps-api-loader",["angular2/core"],!0,function(a,b,c){"use strict";var d=this,e=d.define;d.define=void 0;var f=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},g=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},h=a("angular2/core"),i=function(){function a(){}return a=f([h.Injectable(),g("design:paramtypes",[])],a)}();return b.MapsAPILoader=i,d.define=e,c.exports}),System.registerDynamic("angular2-google-maps/core",["angular2/core","angular2-google-maps/services/maps-api-loader/maps-api-loader","angular2-google-maps/services/maps-api-loader/lazy-maps-api-loader","angular2-google-maps/directives","angular2-google-maps/services"],!0,function(a,b,c){"use strict";function d(a){for(var c in a)b.hasOwnProperty(c)||(b[c]=a[c])}var e=this,f=e.define;e.define=void 0;var g=a("angular2/core"),h=a("angular2-google-maps/services/maps-api-loader/maps-api-loader"),i=a("angular2-google-maps/services/maps-api-loader/lazy-maps-api-loader");return d(a("angular2-google-maps/directives")),d(a("angular2-google-maps/services")),b.ANGULAR2_GOOGLE_MAPS_PROVIDERS=[new g.Provider(h.MapsAPILoader,{useClass:i.LazyMapsAPILoader})],e.define=f,c.exports});
//# sourceMappingURL=angular2-google-maps.min.js.map